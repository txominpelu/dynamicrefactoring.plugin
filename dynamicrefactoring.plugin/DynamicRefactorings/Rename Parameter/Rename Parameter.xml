<?xml version="1.0" encoding="iso-8859-1"?><!DOCTYPE refactoring  SYSTEM 'refactoringDTD.dtd'><refactoring name="Rename Parameter">
	<information>
		<description>Change the name of the parameter.</description>
		<image src="renameparameter.JPG"/>
		<motivation>The name of a parameter within a method's signature does not reveal its purpose.</motivation>
	<categorization><classification name="Scope"><category>FormalArg</category></classification></categorization></information>
	<inputs>
		<input name="Parameter" root="true" type="moon.core.classdef.FormalArgument"/>
		<input from="Parameter" method="getName" name="Old_name" root="false" type="moon.core.Name"/>
		<input name="New_name" root="false" type="moon.core.Name"/>
		<input from="Parameter" method="getMethDec" name="Method" root="false" type="moon.core.classdef.MethDec"/>
		<input name="Model" root="false" type="moon.core.Model"/>
	</inputs>
	<mechanism>
		<preconditions>
			<precondition name="repository.moon.concretepredicate.ExistsFormalArgInMethod">
				<param name="Parameter"/>
				<param name="Method"/>
			</precondition>
			<precondition name="repository.moon.concretepredicate.HasNotFormalArgWithName">
				<param name="Method"/>
				<param name="New_name"/>
			</precondition>
			<precondition name="repository.moon.concretepredicate.NotExistsLocalDecWithName">
				<param name="Method"/>
				<param name="New_name"/>
			</precondition>
		</preconditions>
		<actions>
			<action name="repository.moon.concreteaction.RenameFormalArg">
				<param name="Parameter"/>
				<param name="New_name"/>
			</action>
		</actions>
		<postconditions>
			<postcondition name="repository.moon.concretepredicate.HasNotFormalArgWithName">
				<param name="Method"/>
				<param name="Old_name"/>
			</postcondition>
			<postcondition name="repository.moon.concretepredicate.ExistsFormalArgInMethod">
				<param name="Parameter"/>
				<param name="Method"/>
			</postcondition>
		</postconditions>
	</mechanism>
	<examples/>
</refactoring>
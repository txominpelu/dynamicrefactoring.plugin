<?xml version="1.0" encoding="iso-8859-1"?><!DOCTYPE refactoring  SYSTEM 'refactoringDTD.dtd'><refactoring name="Replace Formal Parameter With Bounding Type">
	<information>
		<description>Replace the formal parameter for one of its bounding types.</description>
		<motivation>Genericity must be removed from a class.</motivation>
		<categorization>
			<classification name="Scope">
				<category>FormalPar</category>
				<category>BoundedPar</category>
			</classification>
		</categorization>
	 </information>
	<inputs>
		<input name="Model" root="false" type="moon.core.Model"/>
		<input from="Parameter" method="getClassDef" name="Class" root="false" type="moon.core.classdef.ClassDef"/>
		<input from="Parameter" method="getBounds" name="Bounding_type" root="false" type="moon.core.classdef.ClassType"/>
		<input name="Parameter" root="true" type="moon.core.genericity.BoundS"/>
	</inputs>
	<mechanism>
		<preconditions/>
		<actions>
			<action name="repository.moon.concreteaction.RemoveFormalParameter">
				<param name="Parameter"/>
			</action>
			<action name="repository.moon.concreteaction.SubstituteFormalParameter">
				<param name="Parameter"/>
				<param name="Bounding_type"/>
			</action>
			<action name="repository.moon.concreteaction.RemoveRealParameter">
				<param name="Parameter"/>
			</action>
		</actions>
		<postconditions>
			<postcondition name="repository.moon.concretepredicate.IsNotFormalPar">
				<param name="Parameter"/>
				<param name="Class"/>
			</postcondition>
		</postconditions>
	</mechanism>
	<examples/>
</refactoring>